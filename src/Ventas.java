
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author salva
 */
public class Ventas extends javax.swing.JFrame {
     private ResultSet resultado;
   private PreparedStatement enunciado;
   private Connection conexion;
    /**
     * Creates new form Ventas
     */
    public Ventas() {
        initComponents();
        conectar();
        dtm= (DefaultTableModel) tblventas.getModel();
        dtm.setRowCount(0);
        cargarcombo();
        listenComboFiltro();
        listenComboEstatus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    ConexionBD con = new ConexionBD();
    
    private void conectar(){
        conexion = con.conectar();
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblventas = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        cmbFiltro = new javax.swing.JComboBox<>();
        lblCantidades = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jdc1 = new datechooser.beans.DateChooserPanel();
        jdc2 = new datechooser.beans.DateChooserPanel();
        jLabel7 = new javax.swing.JLabel();
        btn1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        linea = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbEstatus = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setIconImage(getIconImage());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblventas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cliente", "Estado", "Lugar", "Producto", "Descripcion", "Cantidad", "Precio", "Costo", "Fecha", "Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblventas);
        if (tblventas.getColumnModel().getColumnCount() > 0) {
            tblventas.getColumnModel().getColumn(0).setResizable(false);
            tblventas.getColumnModel().getColumn(1).setResizable(false);
            tblventas.getColumnModel().getColumn(2).setResizable(false);
            tblventas.getColumnModel().getColumn(3).setResizable(false);
            tblventas.getColumnModel().getColumn(4).setResizable(false);
            tblventas.getColumnModel().getColumn(5).setResizable(false);
            tblventas.getColumnModel().getColumn(6).setResizable(false);
            tblventas.getColumnModel().getColumn(7).setResizable(false);
            tblventas.getColumnModel().getColumn(8).setResizable(false);
            tblventas.getColumnModel().getColumn(9).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 403, 1300, 280));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Filtar por Producto:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 50, -1, -1));

        cmbFiltro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos los productos" }));
        jPanel1.add(cmbFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 80, 210, -1));

        lblCantidades.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jPanel1.add(lblCantidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 207, 70, 20));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Del:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel2.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Consultar ventas");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, -1, -1));
        jPanel2.add(jdc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 386, -1));
        jPanel2.add(jdc2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 386, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Al:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, -1, -1));

        btn1.setBackground(new java.awt.Color(0, 0, 255));
        btn1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btn1.setForeground(new java.awt.Color(255, 255, 255));
        btn1.setText("Aceptar");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        jPanel2.add(btn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 870, 370));

        jLabel6.setForeground(new java.awt.Color(153, 153, 153));
        jLabel6.setText("_________");
        jLabel6.setMaximumSize(new java.awt.Dimension(70, 20));
        jLabel6.setMinimumSize(new java.awt.Dimension(70, 20));
        jLabel6.setName(""); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(70, 20));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 210, 70, 20));

        linea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        linea.setForeground(new java.awt.Color(153, 153, 153));
        linea.setText("_______");
        linea.setPreferredSize(new java.awt.Dimension(70, 20));
        jPanel1.add(linea, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 270, 70, 20));

        lblTotal.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jPanel1.add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 270, 140, 20));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Total de Productos vendidos");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 210, -1, -1));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Total de Ingresos");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 270, -1, -1));

        cmbEstatus.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbEstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Listo", "Cancelado", "En reparto", "Pago Pendiente" }));
        jPanel1.add(cmbEstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 150, 210, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Estatus del pedido");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 130, -1, -1));

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1323, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void listenComboFiltro(){
        cmbFiltro.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String fecha1 = getFechaI();
                String fecha2 = getFechaF();
                if(cmbFiltro.getSelectedIndex()!=0){
                    dtm.setRowCount(0);
                    String O[]=cmbFiltro.getSelectedItem().toString().split("-");                    
                    consultarventas(fecha1,fecha2,Integer.parseInt(O[0]));
                    totales();
                    cantidades();
                }else{
                    consultarventas(fecha1, fecha2);
                    totales();
                    cantidades();
                }
            }
        });    
    }
    
    private void listenComboEstatus(){
        cmbEstatus.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String f1 = getFechaI();
                String f2 = getFechaF();
                lblCantidades.setText("0");
                lblTotal.setText("0");
                String status = cmbEstatus.getSelectedItem().toString();
                switch(status){
                    case "Listo":
                        consultarventas(f1, f2);
                        totales();
                        cantidades();
                        break;
                    case "Cancelado":
                        consultarventas(f1, f2, "CANCELADO");
                        break;
                    case "En reparto":
                        consultarventas(f1, f2, "En Reparto");
                        break;
                    default:
                        consultarventas(f1, f2, "Pago pendiente");
                        break;
                }                
            }
        });
    }
    public void totales()
    {
        int r=dtm.getRowCount();
        float total=0;
        for(int i=0;i<r;i++)
        {
            total+=Float.parseFloat(dtm.getValueAt(i,7).toString());
        }
        lblTotal.setText(total+"");
    }
     public void cantidades()
    {
        int r=dtm.getRowCount();
        int total=0;
        for(int i=0;i<r;i++)
        {
            total+=Integer.parseInt(dtm.getValueAt(i,5).toString());
        }
        lblCantidades.setText(total+"");
    }
     
    private boolean validarRango(String fecha1, String fecha2){
        boolean b = true;
        String []fechaInicio = fecha1.split("-");
        String []fechaFin = fecha2.split("-");
        int añoI = Integer.parseInt(fechaInicio[0]);
        int añoF = Integer.parseInt(fechaFin[0]);
        int mesI = Integer.parseInt(fechaInicio[1]);
        int mesF = Integer.parseInt(fechaFin[1]);
        int diaI = Integer.parseInt(fechaInicio[2]);
        int diaF = Integer.parseInt(fechaFin[2]);
        if(diaI > diaF){
            if(mesI >= mesF){
                if(añoI >= añoF){
                    showMessageDialog(this,"La fecha inicial debe ser anterior a la fecha final");
                    b = false;
                }
            }
        }
        return b;
    }
    
    private String getFechaI(){
        String fecha = "";
        int dia1=jdc1.getSelectedDate().getTime().getDate();
        int mes1=jdc1.getSelectedDate().getTime().getMonth()+1;
        int año1=jdc1.getSelectedDate().getTime().getYear()+1900;
        fecha=(año1 +"-"+mes1+"-"+dia1);
        return fecha;
    }
    
    private String getFechaF(){
        String fecha = "";
        int dia2=jdc2.getSelectedDate().getTime().getDate();
        int mes2=jdc2.getSelectedDate().getTime().getMonth()+1;
        int año2=jdc2.getSelectedDate().getTime().getYear()+1900;
        fecha=(año2 +"-"+mes2+"-"+dia2);
        return fecha;
    }
    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        String fecha1 = getFechaI();
        String fecha2 = getFechaF();
        if(validarRango(fecha1,fecha2) == true){
            consultarventas(fecha1,fecha2);
            totales();
            cantidades();
        }
        //showMessageDialog(null,fecha1+"  "+fecha2);        
    }//GEN-LAST:event_btn1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       this.hide();
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    public void cargarcombo(){
        int id;
        String nombre;
        try{
            enunciado = conexion.prepareStatement("select * from Productos");
            resultado = enunciado.executeQuery();
            while(resultado.next()){
                id=resultado.getInt("idProducto");
                nombre=resultado.getString("Nombre");
                cmbFiltro.addItem(id+"-"+nombre);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
   public void consultarventas(String f1,String f2,int idproducto)
    {
        Object []O=new Object[10];   
        dtm.setNumRows(0);
        
        try{
           
        enunciado = conexion.prepareStatement("select * from Pedidos,Cliente,Venta,Productos where (Venta.Fecha Between '"+f1+"' and '"+f2+"') and Cliente_idCliente=cliente.idCliente and Pedidos_idPedidos=Pedidos.idPedidos and Productos_idProductos="+idproducto+" and Productos_idProductos=Productos.idProducto");
        
         resultado = enunciado.executeQuery();
         while(resultado.next()){
            O[0]=resultado.getString("NombreCliente");
            
             O[1]=resultado.getString("Estado");
                     O[2]=resultado.getString("Lugar");
                     O[3]=resultado.getString("Nombre");
                     O[4]=resultado.getString("Descripcion");
                     O[5]=resultado.getInt("Cantidad");
                     O[6]=resultado.getFloat("Precio");
                     O[7]=resultado.getFloat("Costo");
                     O[8]=resultado.getDate("Fecha");
                     O[9]=resultado.getTime("Hora");
                     dtm.addRow(O);
         }
         
      }catch(Exception e){
         e.printStackTrace();
      }
    }
    public void consultarventas(String f1,String f2){
        Object []O=new Object[10];   
        dtm.setNumRows(0);
        try{           
            enunciado = conexion.prepareStatement("select * from Pedidos,Cliente,Venta,Productos where (Venta.Fecha Between '"+f1+"' and '"+f2+"') and Cliente_idCliente=cliente.idCliente and Pedidos_idPedidos=Pedidos.idPedidos and Productos_idProductos=Productos.idProducto");
            resultado = enunciado.executeQuery();
            while(resultado.next()){
                if(resultado.getString("Estado").equals("LISTO")){
                    O[0]=resultado.getString("NombreCliente");
                    O[1]=resultado.getString("Estado");
                    O[2]=resultado.getString("Lugar");
                    O[3]=resultado.getString("Nombre");
                    O[4]=resultado.getString("Descripcion");
                    O[5]=resultado.getInt("Cantidad");
                    O[6]=resultado.getFloat("Precio");
                    O[7]=resultado.getFloat("Costo");
                    O[8]=resultado.getDate("Fecha");
                    O[9]=resultado.getTime("Hora");
                    dtm.addRow(O);
                }                                           
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void consultarventas(String f1,String f2, String status){
        Object []O=new Object[10];   
        dtm.setNumRows(0);
        try{           
            enunciado = conexion.prepareStatement("select * from Pedidos,Cliente,Venta,Productos where (Venta.Fecha Between '"+f1+"' and '"+f2+"') and Cliente_idCliente=cliente.idCliente and Pedidos_idPedidos=Pedidos.idPedidos and Productos_idProductos=Productos.idProducto and ESTADO = '"+status+"'");
            resultado = enunciado.executeQuery();
            while(resultado.next()){                
                O[0]=resultado.getString("NombreCliente");
                O[1]=resultado.getString("Estado");
                O[2]=resultado.getString("Lugar");
                O[3]=resultado.getString("Nombre");
                O[4]=resultado.getString("Descripcion");
                O[5]=resultado.getInt("Cantidad");
                O[6]=resultado.getFloat("Precio");
                O[7]=resultado.getFloat("Costo");
                O[8]=resultado.getDate("Fecha");
                O[9]=resultado.getTime("Hora");
                dtm.addRow(O);                
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
        getImage(ClassLoader.getSystemResource("Recursos/icono.png"));
        return retValue;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventas().setVisible(true);
            }
        });
    }
    DefaultTableModel dtm;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JComboBox<String> cmbEstatus;
    private javax.swing.JComboBox<String> cmbFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private datechooser.beans.DateChooserPanel jdc1;
    private datechooser.beans.DateChooserPanel jdc2;
    private javax.swing.JLabel lblCantidades;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel linea;
    private javax.swing.JTable tblventas;
    // End of variables declaration//GEN-END:variables
}
