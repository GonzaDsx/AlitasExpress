
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Gonzalo
 */
public class AdministrarMesas extends javax.swing.JFrame {

    /**
     * Creates new form AdministrarMesas
     */
    
    int mesa;
    private Connection conexion;
    private ResultSet rs;
    private PreparedStatement enunciado;
    ConexionBD con = new ConexionBD();
    
    public AdministrarMesas() {
        initComponents();
        dtm = (DefaultTableModel) tblMesas.getModel();
        this.setLocationRelativeTo(null);
        conectar();
        cargarMesas();
    }

    private void conectar(){
        conexion = con.conectar();
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMesas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnAñadir = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrar Mesas");
        setIconImage(getIconImage());

        tblMesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMesas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblMesasFocusGained(evt);
            }
        });
        tblMesas.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblMesasPropertyChange(evt);
            }
        });
        tblMesas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblMesasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblMesasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblMesasKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblMesas);
        if (tblMesas.getColumnModel().getColumnCount() > 0) {
            tblMesas.getColumnModel().getColumn(0).setMinWidth(100);
            tblMesas.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setText("Mesas");

        btnAñadir.setText("Añadir Mesa");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAñadir, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        String nombreM = "Mesa "+mesa;
        Object O[] = new Object[2];
        O[0] = mesa;
        O[1] = nombreM;
        dtm.addRow(O);        
        try{
            enunciado = conexion.prepareStatement("INSERT INTO Inventario_Mesas VALUES (?,?)");
            enunciado.setInt(1, mesa);
            enunciado.setString(2, nombreM);
            int resul = enunciado.executeUpdate();
            mesa++;
        }catch(Exception e){
            showMessageDialog(this,"Ocurrio un problema al guardar");
            e.printStackTrace();
        }          
    }//GEN-LAST:event_btnAñadirActionPerformed
    
    private void cargarMesas(){      
        dtm.setNumRows(0);
        Object O[] = new Object[2];
        try{
            enunciado = conexion.prepareStatement("SELECT * FROM Inventario_Mesas");
            rs = enunciado.executeQuery();
            while(rs.next()){
                O[0] = rs.getInt("idInvMesa");
                O[1] = rs.getString("NombreMesa");
                mesa = rs.getInt("idInvMesa")+1;
                dtm.addRow(O);                  
            }            
        }catch(Exception e){
            showMessageDialog(this,"Ocurrio un problema al cargar");
            e.printStackTrace();
        }   
    }
    
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try{
            enunciado = conexion.prepareStatement("DELETE FROM Inventario_Mesas WHERE idInvMesa = ?");
            enunciado.setInt(1, Integer.parseInt(tblMesas.getValueAt(tblMesas.getSelectedRow(), 0).toString()));
            int res = enunciado.executeUpdate();
            cargarMesas();
        }catch(Exception e){
             showMessageDialog(this,"Ocurrio un problema al borrar");
             e.printStackTrace();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tblMesasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMesasKeyTyped
        
    }//GEN-LAST:event_tblMesasKeyTyped

    private void tblMesasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMesasKeyPressed
        
    }//GEN-LAST:event_tblMesasKeyPressed

    private void tblMesasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblMesasFocusGained
        
    }//GEN-LAST:event_tblMesasFocusGained

    private void tblMesasPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblMesasPropertyChange
        
    }//GEN-LAST:event_tblMesasPropertyChange

    private void tblMesasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMesasKeyReleased
        if(evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            try{
                enunciado = conexion.prepareStatement("UPDATE Inventario_Mesas SET NombreMesa = ? WHERE idInvMesa = ?");
                enunciado.setString(1, tblMesas.getValueAt(tblMesas.getSelectedRow(), 1).toString());
                enunciado.setInt(2, Integer.parseInt(tblMesas.getValueAt(tblMesas.getSelectedRow(), 0).toString()));
                int res = enunciado.executeUpdate();
                cargarMesas();
            }catch(Exception e){
                showMessageDialog(this,"Ocurrio un problema al actualizar");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_tblMesasKeyReleased

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
        getImage(ClassLoader.getSystemResource("Recursos/icono.png"));
        return retValue;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministrarMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministrarMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministrarMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministrarMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministrarMesas().setVisible(true);
            }
        });
    }

    DefaultTableModel dtm;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMesas;
    // End of variables declaration//GEN-END:variables
}
